#include<bits/stdc++.h>
  #include<stdlib.h>
  using namespace std;
 #define MAX 50

     vector<int > nextsmallerElementL(int arr[], int n){
      
      vector<int > v;
      stack<pair<int ,int >> s;

      int i=0;int j=0;
      s.push({arr[j],j});
      v.push_back(-1);
      for(j=1;j<n;j++)
      {
          
           
            while(s.size()>0 && s.top().first>=arr[j])
            {
                s.pop();
                
            }
         
         if(s.size()==0)
         {
            v.push_back(-1);
         }
        else
         {
            v.push_back(s.top().second);

         }
         s.push({arr[j],j});
      }
      // for(int i=0;i<v.size();i++)
      // {
      //   v[i]=i-v[i];
      // }
      // reverse(v.begin(),v.end());
     return v;
      
    }

 vector<int> nextsmallerElementR(int  arr[], int n){
      
      vector<int > v;
      stack<pair<int ,int >> s;

      int i=0;int j=n-1;
      s.push({arr[j],j});
      v.push_back(n);
      for(j=n-2;j>=0;j--)
      {
          
           
            while(s.size()>0 && s.top().first>=arr[j])
            {
                s.pop();
                
            }
         
         if(s.size()==0)
         {
            v.push_back(n);
         }
        else
         {
            v.push_back(s.top().second);

         }
         s.push({arr[j],j});
      }
      // for(int i=0;i<v.size();i++)
      // {
      //   v[i]=i-v[i];
      // }
      reverse(v.begin(),v.end());
     return v;
      
    }

    int getMaxArea(int arr[], int n)
    {
        // Your code here
        vector<int >v1=nextsmallerElementR(arr,n);
        vector<int >v2=nextsmallerElementL(arr,n);
        
     int max1=0;
     for(int i=0;i<n;i++)
     {
        int k=v1[i]-v2[i]-1;
        max1=max(k*arr[i],max1);

     }
     return max1;
    }
    int maxArea(int M[MAX][MAX], int n, int m) {
        std::vector<int> v;
        int j=0;
        int a[m];
        for(int i=0;i<m;i++)
        {
           a[i]=M[0][i];
          
           
        }
       
        int mx=getMaxArea(a,m);
    for(int i=1;i<n;i++)
     { int t;
        for(int j=0;j<m;j++)
        {
            if(M[i][j]==0)
            {
                a[j]=0;
            }
            else
            {
                a[j]+=M[i][j];
            }

          
        }
        t=getMaxArea(a,m);
        mx=max(mx,t);
    }


        return mx;
        
    }


int main()
{
     int n,k,m;
    cin >> n>>m;
    // cin>>k;
     int M[MAX][MAX];
     int  arr[n];
     for(int i=0;i<n;i++)
     {
        for(int j=0;j<m;j++)
        {
            cin>>M[i][j];
        }
     }
      

    // for(int i=0;i<n;i++)
    // {
    //     cin >> arr[i];
    // }

    //  int arr2[k];
    //    for(int i=0;i<k;i++)
    // {
    //     cin >> arr2[i];
    // }b
     
  int x=maxArea(M,n,m);
  cout<<x;
     // int ans=rev(1122);
     //  cout << ans << endl;
}






